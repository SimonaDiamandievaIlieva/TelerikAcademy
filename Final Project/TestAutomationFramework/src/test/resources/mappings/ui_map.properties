home.signInButton=//a[@href="/login" and contains(@class, "nav-link")]
home.homeButton=//a[@class='nav-link' and text()='Home']
home.latestPostsButton=//a[@href='/posts' and contains(text(),'Latest')]
home.aboutUsButton=//a[@href='/about-us' and contains(text(), 'About us')]
home.personalProfileButton=//a[@class='nav-link' and contains(text(), 'Personal')]
home.personalProfileAlt=//a[@href='/auth/users/%s/profile']
home.addNewPostButton=//a[@class='nav-link' and contains(text(), 'Add')]
home.logoutButton=//a[@class='nav-link' and contains(text(), 'LOGOUT')]
home.weAreButton=//a[@class='navbar-brand' and contains(text(), 'WEare')]
home.profession=//input[@id='searchParam1']
home.username=//input[@id='searchParam2']
home.searchButton=//button[@type='submit' and contains(text(), 'Search')]
home.credentialError=//i[contains(text(), 'Wrong')]

register.username=//input[@id='name']
register.email=//input[@id='email']
register.password=//input[@id='password']
register.confirmPassword=//input[@id='confirm']
register.registerButton=//input[contains(@class, 'login-button')]
register.updateProfileLoginButton=//a[contains(@class, 'login-button')]
register.userExistError=//i[contains(text(), 'User with this username already exist')]
register.userPasswordNotConfirmedError=//i[contains(text(), 'Your password is not confirmed')]
register.invalidEmailFormatError=//i[contains(text(), "this doesn't look like valid email")]

login.username=//input[@id='username']
login.password=//input[@id='password']
login.loginButton=//input[@value='Login']
login.wrongUserOrPasswordMessage=//i[contains(text(), " Wrong username or password. ")]

profile.editButton=//a[@class='nav-link' and (contains(text(), 'edit'))]
profile.backToProfile=//a[@class='nav-link' and contains(text(),'Profile')]
profile.inputFirstName=//input[@id='nameE']
profile.inputLastName=//input[@id='lastnameE']
profile.inputBirthDay=//input[@id='birthDayE']
profile.inputGender=//select[@id='selectE']
profile.inputEmail=//input[@id='emailE']
profile.inputInfo=//textarea[@id='publicinfoE']
profile.inputCity=//select[@id='selectC']
profile.userChecker=//div[@class='row' and contains(string(), 'Id')]//div[@class='col-md-6' and contains(string(), '%s')]
profile.nameChecker=//div[@class='row' and contains(string(), 'Name')]//div[@class='col-md-6' and contains(string(), '%s')]
profile.emailChecker=//div[@class='row' and contains(string(), 'Email')]//div[@class='col-md-6' and contains(string(), '%s')]
profile.cityChecker=//div[@class='row' and contains(string(), 'Location')]//div[@class='col-md-6' and contains(string(), '%s')]
profile.updateButton=//button[@name='submit' and (contains(text(), 'Profile'))]
profile.profession=//select[@id='category.id']
profile.updateProf=(//button[@name='submit' and (contains(text(), 'Update'))])[2]
profile.profCheck=//span[contains(text(), 'Author')]
profile.skillInput=//input[@id='skill%d']
profile.updateAvailability=//input[@id='startTime']
profile.updateSkills=(//button[@name='submit' and (contains(text(), 'Update'))])[3]
profile.skillCheck=//form[@class='browse-form' and descendant::span[contains(text(), 'TestSkill')]]
profile.homeButton=//a[contains(text(), "Home")]
profile.logOutButton=//a[contains(text(), 'LOGOUT')]
profile.friendCount=//div[@class = 'col-md-6' and contains(string(), '1 friends')]

connection.sendRequest=//input[@value='connect']
connection.verifySent=//div/div[contains(string(), 'Good job! You have send friend request!')]
connection.newRequests=//input[@value='New Friend Requsts']
connection.approveRequest=//input[@value='Approve Request']
connection.verifyConnected=//input[@value='disconnect']

post.clickPostVisibilityButton=//select[@id='StringListId']
post.postContent=//textarea[@id='message']
post.imageFileButton=//input[@id='imagefile']
post.saveButton=//input[@type='submit' and @value='Save post']

post.likePostButton=//input[@class='fa-heart' and @value='Like']
post.likeAssertion=//span[@class='position' and text()='Likes: 1']

post.dislikePostButton=//input[@class='fa-heart' and @value='Dislike']
post.dislikeAssertion=//span[@class='position' and text()='Likes: 0']

post.postExistingAssertion=//p[@class='mb-2' and contains(text(), '%s')]
post.publicPostAssertion=//span[@class='position' and contains(text(), 'Public post: true')]
post.privatePostAssertion=//span[@class='position' and contains(text(), 'Public post: false')]

editPost.clickPostVisibilityButton=//select[@id='StringListId']
editPost.postContent=//textarea[@id='message']
editPost.imageFileButton=//input[@id='imagefile']
editPost.saveButton=//input[@type='submit' and @value='Save post']
editPost.publicPostAssertion=//p[text()='%s']
comment.editPostButton=//a[@class='btn py-3 px-4 btn-primary' and text()='Edit post']

deletePost.deletePostButton=//a[@class='btn py-3 px-4 btn-primary' and text()='Delete post']
deletePost.deleteDropDownMenuButton =//select[@id='StringListId']
deletePost.submitButton=//input[@type='submit']
deletePost.deleteAssertion=//h1[text()='Post deleted successfully']

latestPost.browsePublicPostsButton=(//input[@type='submit' and @value='Browse' and @class='btn py-3 px-4 btn-primary'])[1]
latestPost.explorePostButton=//a[contains(@class, 'btn btn-primary')][1]

comment.content=//textarea[@id='message']
comment.postCommentButton=//input[@type='submit' and @value='Post Comment']
comment.showCommentsButton=//button[@class='show-comments']
comment.commentExistingAssertion=//p[text()='%s']

comment.likeButton=//input[@class='reply' and @value='Like']
comment.likesAssert=//span[@class='position' and text()='Likes: 1']

comment.dislikeButton=//input[@class='reply' and @value='Dislike']
comment.dislikeAssert=//span[@class='position' and text()='Likes: 0']

comment.editCommentButton=//a[@class='reply' and text()='Edit comment']
comment.editCommentAssertion=//p[text()='%s']
comment.deleteCommentButton=//a[@class='reply' and text()='Delete comment']

editComment.content=//textarea[@id='message']
editComment.editButton=//input[@value='Edit Comment']

deleteComment.dropDownMenu=//select[@id='StringListId']
deleteComment.submitButton=//input[@value='Submit']
deleteComment.deleteAssertion=//h1[text()='Comment deleted successfully']

admin.adminZone=//a[@href='/admin']
admin.userList=//input[@value='View Users']
admin.loadMoreUsers=//input[@value='LOAD MORE USERS']
admin.disableProfile=//input[@value='disable']
admin.enableProfile=//input[@value='enable']
admin.seeUserProfile=//a [@href='/auth/users/%d/profile'][contains(text(), 'See Profile')]

notFound.notFoundMessage=//h2[contains(text(), '404')]

search.userName=//a/h2[contains(text(),"%s")]
search.userCategory=//span[@class='position' and descendant::text()='%s']
search.noUsersMessage=//h3[contains(text(), 'There are no users existing in this search')]

